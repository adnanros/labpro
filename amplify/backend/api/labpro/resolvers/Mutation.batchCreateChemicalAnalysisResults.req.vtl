#foreach($item in ${ctx.args.CreateChemicalAnalysisResults})
    ## [Start] Owner Authorization Checks **
    #set( $isOwnerAuthorized = false )
    ## Authorization rule:  { allow: groups, groups: ["PackagesAdmin"], operations: [create, read, update, delete] } **
    #set( $userGroups = $ctx.identity.claims.get("cognito:groups"))
    #if( $util.isList($userGroups) )
        #foreach( $allowedOwner in $userGroups )
            #if( $allowedOwner == "PackagesAdmin" )
                #set( $isOwnerAuthorized = true )
            #end
        #end
    #end
    #if( $util.isString($userGroups) )
        #if( $userGroups == "PackagesAdmin" )
            #set( $isOwnerAuthorized = true )
        #end
    #end
    ## [End] Owner Authorization Checks **

    ## [Start] Throw if unauthorized **
    #if( !($isStaticGroupAuthorized == true || $isDynamicGroupAuthorized == true || $isOwnerAuthorized
        == true) )
        $util.unauthorized()
    #end
    ## [End] Throw if unauthorized **
#end

#set($chemicalanalysisresultsdata = [])
#foreach($item in ${ctx.args.CreateChemicalAnalysisOrders})
    $util.qr($item.put("createdAt", $util.time.nowISO8601()))
    $util.qr($item.put("updatedAt", $util.time.nowISO8601()))
    $util.qr($item.put("__typename", "ChemicalAnalysisResult"))
    $util.qr($item.put("id", $util.defaultIfNullOrBlank($item.id, $util.autoId())))
    $util.qr($chemicalanalysisresultsdata.add($util.dynamodb.toMapValues($item)))
#end
{
  "version": "2022-02-1",
  "operation": "BatchPutItem",
  "tables": {
      "ChemicalAnalysisResult-zehj5dhg7nczxlsukimv5mbtyy-dev": $utils.toJson($chemicalanalysisresultsdata)
  }
}